import{k as u,c as n}from"./use-api-DTQNp6K8.js";const l="https://www.mku-journal.online",h="accessToken",c="refreshToken",f="/auth/refresh-token",a=u.create({baseURL:l,withCredentials:!0}),p=()=>n.get(h)||null,k=()=>n.get(c)||null,E=(e,s)=>{n.set(h,e,{path:"/"}),n.set(c,s,{path:"/",expires:1})},T=()=>{n.remove(h,{path:"/"}),n.remove(c,{path:"/"}),localStorage.removeItem("userInfo"),console.log("not refresh")};a.interceptors.request.use(e=>{const s=p();return s&&e.headers&&(e.headers.authorization=`${s}`),e},e=>Promise.reject(e));let i=!1;const o=[],R=e=>{o.push(e)},g=e=>{console.log("refreshSubscribers1",o),o.forEach(s=>s(e)),o.splice(0,o.length),console.log("refreshSubscribers2",o)};a.interceptors.response.use(e=>e,async e=>{const s=e.config;if(e.response?.status===401&&!s._retry){if(i)return console.log("status 401"),new Promise(r=>{R(t=>{s.headers&&(s.headers.authorization=`${t}`),r(a(s))})});s._retry=!0,i=!0;try{const r=k();if(!r)throw new Error("No refresh token available");const{data:t}=await a.post(f,{[c]:r});return E(t.accessToken,t.refreshToken),g(t.accessToken),s.headers&&(s.headers.authorization=`${t.accessToken}`),a(s)}catch(r){return T(),Promise.reject(r)}finally{i=!1}}return Promise.reject(e)});export{a};

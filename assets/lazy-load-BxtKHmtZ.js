const v="modulepreload",y=function(l){return"/Vitamin/"+l},m={},w=function(a,o,d){let u=Promise.resolve();if(o&&o.length>0){const r=document.getElementsByTagName("link"),e=document.querySelector("meta[property=csp-nonce]"),s=e?.nonce||e?.getAttribute("nonce");u=Promise.all(o.map(t=>{if(t=y(t),t in m)return;m[t]=!0;const c=t.endsWith(".css"),h=c?'[rel="stylesheet"]':"";if(!!d)for(let i=r.length-1;i>=0;i--){const f=r[i];if(f.href===t&&(!c||f.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${t}"]${h}`))return;const n=document.createElement("link");if(n.rel=c?"stylesheet":v,c||(n.as="script",n.crossOrigin=""),n.href=t,s&&n.setAttribute("nonce",s),document.head.appendChild(n),c)return new Promise((i,f)=>{n.addEventListener("load",i),n.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${t}`)))})}))}return u.then(()=>a()).catch(r=>{const e=new Event("vite:preloadError",{cancelable:!0});if(e.payload=r,window.dispatchEvent(e),!e.defaultPrevented)throw r})};function g(l,a){const o=document.querySelector(a);if(!o)return;new IntersectionObserver(async(u,r)=>{for(const e of u)if(e.isIntersecting){r.unobserve(e.target);try{await(await l()).default()}catch(s){console.error(`Ошибка загрузки модуля для ${a}:`,s)}}},{threshold:.1}).observe(o)}export{w as _,g as u};
